//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Toggler.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Toggler: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Toggler()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Toggler"",
    ""maps"": [
        {
            ""name"": ""Default"",
            ""id"": ""757c5584-c2c2-4fb2-9b87-63ef0483b57a"",
            ""actions"": [
                {
                    ""name"": ""LowerRes"",
                    ""type"": ""Button"",
                    ""id"": ""c17ea932-445d-47c4-a161-d71017f9b9de"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UpRes"",
                    ""type"": ""Button"",
                    ""id"": ""acadc682-54c3-4dd9-88bb-b497d269d969"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NewNumber"",
                    ""type"": ""Button"",
                    ""id"": ""de43abe3-090e-4bef-9349-76a572a82786"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7f9801b9-8458-498f-989a-13fd64f5519e"",
                    ""path"": ""<XRController>{RightHand}/{PrimaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LowerRes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31551ae6-e1d3-4a22-b6be-82c49e69bd3b"",
                    ""path"": ""<XRController>{LeftHand}/{PrimaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LowerRes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""453daca6-09bf-4031-9e0e-bbe7db43039d"",
                    ""path"": ""<XRController>{RightHand}/{SecondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpRes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71eea1d2-5d66-440d-ac14-b3aa5dc53be4"",
                    ""path"": ""<XRController>{LeftHand}/{SecondaryButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UpRes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f74f140d-e66f-459c-bedd-716022e39341"",
                    ""path"": ""<XRController>/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NewNumber"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Default
        m_Default = asset.FindActionMap("Default", throwIfNotFound: true);
        m_Default_LowerRes = m_Default.FindAction("LowerRes", throwIfNotFound: true);
        m_Default_UpRes = m_Default.FindAction("UpRes", throwIfNotFound: true);
        m_Default_NewNumber = m_Default.FindAction("NewNumber", throwIfNotFound: true);
    }

    ~@Toggler()
    {
        UnityEngine.Debug.Assert(!m_Default.enabled, "This will cause a leak and performance issues, Toggler.Default.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Default
    private readonly InputActionMap m_Default;
    private List<IDefaultActions> m_DefaultActionsCallbackInterfaces = new List<IDefaultActions>();
    private readonly InputAction m_Default_LowerRes;
    private readonly InputAction m_Default_UpRes;
    private readonly InputAction m_Default_NewNumber;
    public struct DefaultActions
    {
        private @Toggler m_Wrapper;
        public DefaultActions(@Toggler wrapper) { m_Wrapper = wrapper; }
        public InputAction @LowerRes => m_Wrapper.m_Default_LowerRes;
        public InputAction @UpRes => m_Wrapper.m_Default_UpRes;
        public InputAction @NewNumber => m_Wrapper.m_Default_NewNumber;
        public InputActionMap Get() { return m_Wrapper.m_Default; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultActions set) { return set.Get(); }
        public void AddCallbacks(IDefaultActions instance)
        {
            if (instance == null || m_Wrapper.m_DefaultActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DefaultActionsCallbackInterfaces.Add(instance);
            @LowerRes.started += instance.OnLowerRes;
            @LowerRes.performed += instance.OnLowerRes;
            @LowerRes.canceled += instance.OnLowerRes;
            @UpRes.started += instance.OnUpRes;
            @UpRes.performed += instance.OnUpRes;
            @UpRes.canceled += instance.OnUpRes;
            @NewNumber.started += instance.OnNewNumber;
            @NewNumber.performed += instance.OnNewNumber;
            @NewNumber.canceled += instance.OnNewNumber;
        }

        private void UnregisterCallbacks(IDefaultActions instance)
        {
            @LowerRes.started -= instance.OnLowerRes;
            @LowerRes.performed -= instance.OnLowerRes;
            @LowerRes.canceled -= instance.OnLowerRes;
            @UpRes.started -= instance.OnUpRes;
            @UpRes.performed -= instance.OnUpRes;
            @UpRes.canceled -= instance.OnUpRes;
            @NewNumber.started -= instance.OnNewNumber;
            @NewNumber.performed -= instance.OnNewNumber;
            @NewNumber.canceled -= instance.OnNewNumber;
        }

        public void RemoveCallbacks(IDefaultActions instance)
        {
            if (m_Wrapper.m_DefaultActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDefaultActions instance)
        {
            foreach (var item in m_Wrapper.m_DefaultActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DefaultActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DefaultActions @Default => new DefaultActions(this);
    public interface IDefaultActions
    {
        void OnLowerRes(InputAction.CallbackContext context);
        void OnUpRes(InputAction.CallbackContext context);
        void OnNewNumber(InputAction.CallbackContext context);
    }
}
